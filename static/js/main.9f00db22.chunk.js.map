{"version":3,"sources":["components/NavigationBarComponent.js","shared/Items.js","components/ItemComponent.js","components/ShopComponent.js","App.js","serviceWorker.js","index.js"],"names":["NavigationBarComponent","props","state","isNavOpen","isLoginModalOpen","toggleNav","bind","toggleLoginModal","this","setState","Fragment","Modal","className","isOpen","toggle","ModalHeader","ModalBody","Form","FormGroup","Label","htmlFor","Input","type","id","name","to","check","Row","Col","Button","value","color","Navbar","dark","expand","Container","NavbarToggler","onClick","NavbarBrand","href","placeholder","aria-label","Collapse","navbar","Nav","NavItem","Component","Items","cost","photo","src","sold","review","description","ItemComponent","items","item","Card","CardBody","CardTitle","map","renderCard","ShopComponent","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9f00db22.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport '../App.css';\r\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Button, Input, Form, FormGroup, Container, Row, Col, Modal, ModalHeader, ModalBody, Label } from 'reactstrap';\r\nimport {NavLink, Link} from 'react-router-dom';\r\n\r\nclass NavigationBarComponent extends Component{\r\n\r\n    constructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state={\r\n            isNavOpen:false,\r\n            isLoginModalOpen: false\r\n\t\t};\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleLoginModal = this.toggleLoginModal.bind(this);\r\n\t}\r\n\r\n    toggleNav(){\r\n\t\tthis.setState({\r\n\t\t\tisNavOpen: !this.state.isNavOpen\r\n\t\t});\r\n    }\r\n    \r\n    toggleLoginModal(){\r\n\t\tthis.setState({\r\n\t\t\tisLoginModalOpen: !this.state.isLoginModalOpen\r\n\t\t});\r\n\t}\r\n\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <Modal className=\"modal-dialog-centered\" isOpen={this.state.isLoginModalOpen} toggle = {this.toggleLoginModal}>\r\n                \t<ModalHeader toggle = {this.toggleLoginModal}> Login </ModalHeader>\r\n                \t<ModalBody>\r\n                \t\t<Form>\r\n                \t\t\t<FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"/>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"/>\r\n                                <small>\r\n                                    <Link to='/forgotpassword'>\r\n                                        Forgot password?\r\n                                    </Link>\r\n                                </small>\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\"/>\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Row>\r\n                                    <Col className='col-6'>\r\n                                        <Button className=\"mt-3 btn-block\" type=\"submit\" value=\"submit\" color=\"success\">\r\n                                            Login\r\n                                        </Button>\r\n                                    </Col>\r\n                                    <Col className='col-6'>\r\n                                        <Button className=\"mt-3 btn-block\" type=\"button\" color=\"primary\">\r\n                                            New? Sign In\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                                \r\n                            </FormGroup>\r\n                \t\t</Form>\r\n                \t</ModalBody>\r\n                </Modal>\r\n                <Navbar className=\"bg-dark\" dark expand=\"md\">\r\n                    <Container className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand href=\"/ardrashop.com\">\r\n                            <div className='brandname'>\r\n                                ardra\r\n                            </div>\r\n                        </NavbarBrand>\r\n                        <Form className=\"form-inline my-2 my-lg-0\">\r\n                            <Input className=\"form-control form-control-sm mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n                            <Link to='/ardrashop.com/shop'>\r\n                                <Button className=\"btn btn-sm btn-primary my-2 my-sm-0 d-none d-md-block\" type=\"submit\">\r\n                                    Search\r\n                                </Button>\r\n                            </Link>\r\n                        </Form>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to='/yourordes'>\r\n                                        Your Orders\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to='/cart'>\r\n                                        Cart\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <Form className=\"form-inline my-2 my-lg-0\">\r\n                                    <Button className=\"btn btn-sm btn-primary my-2 my-sm-0\" onClick={this.toggleLoginModal}>\r\n                                        Login\r\n                                    </Button>\r\n                            \t</Form>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </Container>\r\n                </Navbar>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavigationBarComponent;","export const Items = \r\n[   {   id : 1,\r\n        name : 'Airbus A318',\r\n        cost : '77.4 M $',\r\n        photo : [\r\n            {\r\n                src : '/assets/images/AirbusA318/1.jpg'\r\n            },\r\n            {\r\n                src : '/assets/images/AirbusA318/2.jpg'\r\n            },\r\n            {\r\n                src : '/assets/images/AirbusA318/3.jpg'\r\n            },\r\n            {\r\n                src : '/assets/images/AirbusA318/4.jpg'\r\n            },\r\n            {\r\n                src : '/assets/images/AirbusA318/5.jpg'\r\n            },\r\n        ],\r\n        sold : 32,\r\n        review : 4.1,\r\n        description : 'The Airbus A318 is the smallest airliner in the Airbus A320 family. The A318 carries 107 to 132 passengers and has a maximum range of 5,700 km (3,100 nmi).[3] Final assembly of the aircraft took place in Hamburg, Germany. It is intended primarily for short-range service.'\r\n    },\r\n    {   id : 2,\r\n        name : 'Airbus A319',\r\n        cost : '89.6 M $',\r\n        photo : [\r\n            {\r\n                src : '/assets/images/AirbusA319/1.jpg'\r\n            },\r\n            {\r\n                src : '/assets/images/AirbusA319/2.jpg'\r\n            },\r\n            {\r\n                src : '/assets/images/AirbusA319/3.jpg'\r\n            },\r\n            {\r\n                src : '/assets/images/AirbusA319/4.jpg'\r\n            },\r\n            {\r\n                src : '/assets/images/AirbusA319/5.jpg'\r\n            },\r\n        ],\r\n        sold : 117,\r\n        review : 4.5,\r\n        description : 'The Airbus A319 is a member of the Airbus A320 family of short- to medium-range, narrow-body, commercial passenger twin-engine jet airliners manufactured by Airbus. The A319 carries 124 to 156 passengers and has a maximum range of 3,700 nmi (6,900 km; 4,300 mi).'\r\n    }\r\n];\r\n\r\nexport default {\r\n    Items\r\n};","import React, { Component } from 'react';\r\nimport { Container, Row, Col, Card, CardBody, CardTitle, UncontrolledCarousel } from 'reactstrap';\r\n\r\nclass ItemComponent extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            items : this.props.items\r\n        }\r\n    }\r\n\r\n    renderCard(item){\r\n        return(\r\n            <React.Fragment>\r\n                <Card className='mt-3'>\r\n                    <CardBody>\r\n                        <CardTitle>\r\n                            <h5>\r\n                                {item.name} <small className='text-success'> {item.cost} </small>\r\n                            </h5>\r\n                        </CardTitle>\r\n                        <Row className='row'>\r\n                            <Col className='col col-md-4'>\r\n                                \r\n                            </Col>\r\n                            <Col className='col col-md-2'>\r\n                                \r\n                            </Col>\r\n                            <Col className='col col-md-4'>\r\n                                \r\n                            </Col>\r\n                            <Col className='col col-md-2'>\r\n                                \r\n                            </Col>\r\n                        </Row>\r\n                    </CardBody>\r\n                </Card>\r\n           </React.Fragment>\r\n        )\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <Container>\r\n                    {this.state.items.map((items) => this.renderCard(items))}\r\n                </Container>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ItemComponent;","import React, { Component } from 'react';\r\nimport { Items } from '../shared/Items';\r\nimport ItemComponent from './ItemComponent'\r\n\r\nclass ShopComponent extends Component{\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <ItemComponent items={Items}/>\r\n            </React.Fragment>\r\n        );        \r\n    }\r\n}\r\n\r\nexport default ShopComponent;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport NavigationBarComponent from './components/NavigationBarComponent';\r\nimport ShopComponent from './components/ShopComponent'\r\nimport { Switch, Route, Redirect, BrowserRouter } from 'react-router-dom';\r\n\r\nclass App extends Component{\r\n\trender() {\r\n\t\treturn(\r\n\t\t\t<BrowserRouter>\r\n\t\t\t\t<NavigationBarComponent/>\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t<Route exact path=\"/ardrashop.com/shop\" component={ShopComponent} />\r\n\t\t\t\t\t<Redirect to=\"/ardrashop.com\" />\r\n            \t</Switch>\r\n\t\t\t</BrowserRouter>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}